pipeline {
   environment {
      KUBECONFIG = '/root/.kube/config'
    }
  agent {
    kubernetes {
      label 's2i'
      yaml '''apiVersion: v1
kind: Pod
spec:
  containers:
  - name: s2ioperator
    image: magicsong/golang1.11-s2ioperator:latest
    command: [\'cat\']
    tty: true
    volumeMounts:
    - name: dockersock
      mountPath: /var/run/docker.sock
    - name: dockerbin
      mountPath: /usr/bin/docker
  volumes:
  - name: dockersock
    hostPath:
      path: /var/run/docker.sock
  - name: dockerbin
    hostPath:
      path: /usr/bin/docker
      '''
      defaultContainer 's2ioperator'
    }

  }
  stages {
    stage('set kubeconfig'){
     steps{
        sh 'mkdir -p ~/.kube'
        withCredentials([kubeconfigContent(credentialsId: 'kubeconfig', variable: 'KUBECONFIG_CONTENT')]) {
           sh 'echo "$KUBECONFIG_CONTENT" > ~/.kube/config'
        }
      }
    }
    stage('test') {
      steps {

       withCredentials([usernamePassword(passwordVariable : 'DOCKER_PASSWORD' ,usernameVariable : 'DOCKER_USERNAME' ,credentialsId : "dockerhub-id" ,)]) {
          sh 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
       }
       withCredentials([usernamePassword(passwordVariable : 'DOCKER_PASSWORD' ,usernameVariable : 'DOCKER_USERNAME' ,credentialsId : "sed-dockerhub-id" ,)]) {
          sh  "sed -i.bak 's#UserShouldEnterUserName#$DOCKER_USERNAME#' ./config/samples/autoscale/*.yaml"
          sh  "sed -i.bak 's#UserShouldEnterUserPassword#$DOCKER_PASSWORD#' ./config/samples/autoscale/*.yaml"
       }
       withCredentials([usernamePassword(passwordVariable : 'DOCKER_PASSWORD' ,usernameVariable : 'DOCKER_USERNAME' ,credentialsId : "sed-dockerhub-id" ,)]) {
          sh  "sed -i.bak 's#UserShouldEnterUserName#$DOCKER_USERNAME#' ./config/samples/b2i/*.yaml"
          sh  "sed -i.bak 's#UserShouldEnterUserPassword#$DOCKER_PASSWORD#' ./config/samples/b2i/*.yaml"
       }
       withCredentials([string(credentialsId: 'dockerconfig',variable: 'DOCKERCONFIG')]){
          sh  "sed -i.bak 's#UserShouldEnterBase64DockerConfig#$DOCKERCONFIG#' ./config/samples/secret/*.yaml"
       }
       withCredentials([usernamePassword(passwordVariable : 'GIT_PASSWORD' ,usernameVariable : 'GIT_USERNAME' ,credentialsId : "git" ,)]) {
          sh  "sed -i.bak 's#UserShouldEnterBase64Username#$GIT_USERNAME#' ./config/samples/git-secret/*.yaml"
          sh  "sed -i.bak 's#UserShouldEnterBase64Password#$GIT_PASSWORD#' ./config/samples/git-secret/*.yaml"
       }
       
        sh '''
mkdir -p /go/src/github.com/kubesphere
ln -s `pwd` /go/src/github.com/kubesphere/s2ioperator
cd /go/src/github.com/kubesphere/s2ioperator
make e2e-test'''
      }
    }

    stage('docker push') {
      when{
        branch 'master'
      }
      steps {
        sh "make release"
      }
    }
  }
}
